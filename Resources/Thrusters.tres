[gd_resource type="Resource" script_class="ThrusterSave" load_steps=2 format=3 uid="uid://yajy1n4j6b1p"]

[sub_resource type="GDScript" id="GDScript_atosk"]
script/source = "extends Resource
class_name ThrusterSave

const PATH = \"res://Resources/Thrusters.tres\"
@export var dict: Dictionary = {}
func add_thruster(pos, thruster):
	if dict.has(pos): return
	var val = {
		\"path\": thruster.scene_file_path,
		\"powerDraw\": thruster.GetPowerDraw(),
		\"thrust\":  thruster.GetThrust()
	}
	dict[pos] = val

func save():
	print(dict)
	ResourceSaver.save(self, PATH)

func create(parent:Node2D):
	for pos in dict.keys():
		var scene = load(dict[pos].path) as PackedScene;
		var thruster = scene.instantiate() as Thruster;
		thruster.SetPowerDraw(dict[pos].powerDraw)
		thruster.SetThrust(dict[pos].thrust)
		parent.add_child(thruster)
		thruster.position = pos*32
"

[resource]
script = SubResource("GDScript_atosk")
dict = {
Vector2(0, 0): {
"path": "res://Prefabs/Thruster.tscn",
"powerDraw": 1,
"thrust": 1000.0
},
Vector2(1, 0): {
"path": "res://Prefabs/Thruster.tscn",
"powerDraw": 1,
"thrust": 1000.0
},
Vector2(1, 1): {
"path": "res://Prefabs/Thruster.tscn",
"powerDraw": 1,
"thrust": 1000.0
},
Vector2(2, 2): {
"path": "res://Prefabs/Thruster.tscn",
"powerDraw": 1,
"thrust": 1000.0
}
}
